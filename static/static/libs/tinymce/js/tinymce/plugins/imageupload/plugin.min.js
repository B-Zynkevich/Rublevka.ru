/**
 * Плугин позволяет вставить в tinymce-редактор картинку с компа пользователя, предварительно залив ее на сервер.
 */

tinymce.PluginManager.add('imageupload', function(editor) {

    // https://docs.djangoproject.com/en/dev/ref/contrib/csrf/#ref-contrib-csrf
    var csrftoken = $.cookie('csrftoken');

    function csrfSafeMethod(method) {
        // these HTTP methods do not require CSRF protection
        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
    }
    function sameOrigin(url) {
        // test that a given url is a same-origin URL
        // url could be relative or scheme relative or absolute
        var host = document.location.host; // host + port
        var protocol = document.location.protocol;
        var sr_origin = '//' + host;
        var origin = protocol + sr_origin;
        // Allow absolute or scheme relative URLs to same origin
        return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||
            (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||
            // or any other URL that isn't scheme relative or absolute i.e relative.
            !(/^(\/\/|http:|https:).*/.test(url));
    }
    $.ajaxSetup({
        beforeSend: function(xhr, settings) {
            if (!csrfSafeMethod(settings.type) && sameOrigin(settings.url)) {
                // Send the token to same-origin, relative URLs only.
                // Send the token only if the method warrants CSRF protection
                // Using the CSRFToken value acquired earlier
                xhr.setRequestHeader("X-CSRFToken", csrftoken);
            }
        }
    });

    // Функция вызывается всякий раз при клике на кнокпке вставки картинки
    // Показывает диалог для загрузки картинки.
    function insertImage() {

        // Интерфейс для вставки в едитор
        var dom = editor.dom;

        // Если выделен IMG, оставляем его, иначе - NULL
        var imgElm = editor.selection.getNode();
		if (imgElm.nodeName != 'IMG' || imgElm.getAttribute('data-mce-object')) {
			imgElm = null;
		}

        // Вызывается по закрытии окна диалога вывбора картинки.
        // Вставляет уже загруженную на сервер картинку в сам едитор.
        function insertImageOnSubmit(){

            // Атрибуты для тэга img
            var data = {
                src: window.rublevkaPopupWinInsImage.file.url
            };

            // Если выделен не IMG, то создаем его и указываем УРЛ картинки в его атрибуте.
            if (!imgElm) {
                data.id = '__mcenew';
                editor.insertContent(dom.createHTML('img', data));
                imgElm = dom.get('__mcenew');
                dom.setAttrib(imgElm, 'id', null);
            } else {
                dom.setAttribs(imgElm, data);
            }
        }

        // Открываем окно выбора юзером файла из него мы получаем УРЛ зааплоаженного файла
        // Сохраняем его в глобальную переменную чтобы через эту переменную передавать ответ из диалога на страницу.
        window.rublevkaPopupWinInsImage = editor.windowManager.open({
            title: 'Вставка картинки',
            data: {},
            body: [],
            width: 600,
            height: 200,
            onSubmit: insertImageOnSubmit
        });

        // Получаем указатель на DIV с контентом в этом окне
        var winElem = $('#' + window.rublevkaPopupWinInsImage._id);
        var winContent = winElem.find('.mce-form').find('[id*="absend"]');
        winContent.parent().height(200);

        // Вставляем в него код для аплоада файлов
        // Поскольку при закрытии окна тини мсе код панели будет удален вместе с окном самой тини,
        // то код панели для аплоада генерим из шабллона (чтобы могли делать это повторно).
        // Испиользуем empty_id_suffix чтобы по этому id находились элементы в сгенеренном коде а не в объявлении html-шаблона.
        var uploadPanel = $.tmpl($('#upload-file-pannel-content-tmpl').html(), {empty_id_suffix: ''});
        uploadPanel.appendTo(winContent);
        uploadPanel.show();

        // Находим кнопку ОК в диалоге чтобы ее дисаблить и раздисабливать
        var but = winElem.find('.mce-primary').find('button');

        // Теперь выставляем обработчики на эти элементы.
        var uploadButtonId = "#fileupload";
        var progressBarId = '#fileupload_progress';
        var resultDiv = '#fileupload_result_div';
        var uploadBut = '#fileupload';
        var loadingText = '#fileupload_loading_text';

        // Инициализация плагина. Указываем на какой УРЛ отправку на сервер. А также.
        // Показ прогресс бара при старте
        // Скрытие при завершении
        // Дисейбл кнопки "ОК" при старте и энейбл при завершении
        function disableSubmitButton(){
            but.attr('disabled', 'disabled');
            but.parent().addClass('mce-btn-disabled');
            $(uploadBut).parent().hide();
            $(loadingText).show();
        };
        function enableSubmitButton(){
            but.parent().removeClass('mce-btn-disabled');
            but.removeAttr('disabled');
        };
        $(uploadButtonId).fileupload({
            dataType: "json",
            done: function (e, data) {
                window.rublevkaPopupWinInsImage.file = data.result.files[0];
                $(progressBarId).hide();
                $(loadingText).hide();
                enableSubmitButton();
                var msg = '<strong style="font-weight: bold;">' + data.result.files[0].name +
                    '</strong><br />Изображение успешно загружено на сервер. <br />' +
                    'Нажмите "ОК" для вставки изображения в редактор.'
                $(resultDiv).html(msg);
            },
            progressall: function (e, data) {
                /*
                $(progressBarId).show();
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $(progressBarId + ' .rublevka-bar').css('width', progress + '%');
                */
            }
        });
        $(uploadButtonId).fileupload('option', {
            url: '/jqfu_upload_ajax/',
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i
        });
        $(uploadButtonId).bind('fileuploaddrop', disableSubmitButton).bind('fileuploadchange', disableSubmitButton);
    }

	// Добавляем кнопку в тини едитор
    editor.addButton('imageupload', {
		icon: 'image',
		tooltip: 'Insert/edit image',
		onclick: insertImage,
		stateSelector: 'img'
	});

});